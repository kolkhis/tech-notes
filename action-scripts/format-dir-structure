#!/bin/bash

declare -a FILES
declare -a EXCLUDE_DIRS=(
    "./docs"
    "./venv"
    "./.git"
    "./.github"
    "./."
    "./ai"
    "./ai/chatgpt_prompts"
    "./proxmox"
    "./skilstak"
    "./pi"
    "./nix"
    "./api"
    "./killercoda"
    "./android"
    "./hax/htb"
    "./hax/thm"
    "./linux/mint"
    "./linux/lfcs"
    "./linux/labs"
    "./linux/labs/linux"
    "./linux/labs/hashicorp"
    "./aws/cloud_quest"
    ""
)

declare -a EXCLUDE_KEYWORDS=(
    "skilstak"
    "beginner_boost"
    "chatgpt_prompts"
)

add-newlines-before-lists(){
    set -o globstar
    perl -pi -e '
    print "\n" if /^\s{0,}([-*]|\d\.) / && $prev !~ /^(?:\s{0,}([-*]|\d\.)|\n) /;
    $prev = $_' ./**/*.md
    :
}


copy-to-docs() {
    read -r -d '' -a FILES < <(
        find . -maxdepth 1 -mindepth 1 #-type d
    )

    if ! [[ -d ./docs ]]; then
        mkdir docs || { printf "Failed to create docs directory!\n"; }
    fi

    for FILE in "${FILES[@]}"; do
        if [[ "${EXCLUDE_DIRS[*]}" =~ [[:space:]]${FILE}[[:space:]] ||
            "${EXCLUDE_KEYWORDS[*]}" =~ ${FILE} ]]; then
            printf "Found exlusion directory: %s\n" "$FILE" && continue
        fi
        printf "DEBUG: File: %s \n" "$FILE"
        [[ -f $FILE ]] && printf " %s is a regular file.\n" "$FILE"

        # Recursive copying is copying symlinks
        if [[ ! -h $FILE ]]; then
            # cp -r "$FILE" ./docs
            rsync -a --no-links "$FILE" ./docs
        fi
    done
}

[[ ! $(hostname) == homelab ]] && add-newlines-before-lists
copy-to-docs

